from Crypto.Util.number import getPrime, getRandomNBitInteger, isPrime
from Crypto.Util.number import long_to_bytes as ltb, bytes_to_long as btl 
from gmpy2 import iroot 

def isqrt(n):
	x=n
	y=(x+n//x)//2
	while(y<x):
		x=y
		y=(x+n//x)//2
	return x
def fermat(n):
	t0=isqrt(n)+1
	counter=0
	t=t0+counter
	temp=isqrt((t*t)-n)
	while((temp*temp)!=((t*t)-n)):
		counter+=1
		t=t0+counter
		temp=isqrt((t*t)-n)
	s=temp
	p=t+s
	q=t-s
	return p,q
n = 26813274019691004536410414811126190606483263550746553145796609055749916298483047264024872886649161541513490890306474967026184200273205471814051659470816015214869967770106803405277566157782871657627013346535353193701711345315148789838649273102781532897795975559222857153931543235157361620491154688097737935551345674593112942717284616626319392113028730938113023622830078979703707937041765913729196756823183085497561719278051326444372617508145149871024866196399815865387104113877263035893768173574474491970377281348476254618450568873062792692489479954655723910059551954114801763243045967562403641219125909283071508778811
e = 65537
c = 18734887235781276738426089082803318575301673339625808796206919416386440268382566860905128650055910938377277438824923057085969171858500369542872800253068983380635575934807671307710249755520342412055488711062609104539432603907495732207975907062623078853579717727569652611426571717773200185863794284309066092430681786181161863279157059955802516319186683076693769447036695918596629218921760139155813108217456471469986056896563013202083802755452026504852862403938151763499497115976340688024738600942017256014933721216037374199840777245418802161324050489833196765407482370214324845975281264404766233350819618593402595991110
p, q = fermat(n)
print(f"Found p = {p}")
print(f"Found q = {q}")
d= pow(e, -1, (p-1)*(q-1))
print(ltb(pow(c,d,n)))